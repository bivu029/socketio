


const express = require('express');
const socketIO = require('socket.io');

const app = express();

async function startServer() {
  try {
    const server = await new Promise((resolve) => {
      app.listen(3000, resolve);
    });
    console.log('Server running at http://localhost:3000');

    const io = socketIO(server);

    io.on('connection', async (socket) => {
      console.log('a user connected');

      socket.on('private message', async (data) => {
        try {
          const { sender, receiver, message } = data;
          console.log(data);
          await io.to(receiver).emit('private message', { sender, message });
        } catch (err) {
          console.error('Error emitting private message:', err);
          // Handle errors during message emission
        }
      });

      socket.on('disconnect', () => {
        console.log('user disconnected');
      });
    });

    io.on('error', (err) => {
      console.error('Socket.IO error:', err);
      // Handle Socket.IO errors
    });
  } catch (err) {
    console.error('Server error:', err);
    // Handle server startup errors
  }
}

startServer();

// app.get("/home", (req, res) => {
//   res.send("hello from simple server :)");
// });
const express = require("express");
const socketIO = require("socket.io");
const app = express();
//create app.listen() server and attached socketIo with it and create io instance
const io = socketIO(
  app.listen(3000, () => {
    console.log("server running at http://localhost:3000");
  })
).on('error', (err) => {  // Handle server errors gracefully
    console.error('Server error:', err);
   
  });

//create socket connection 
io.on("connection", (socket) => {
  console.log("a user connected");
  // Handle one-to-one chat messages
  socket.on("private message", (data) => {
    const { sender, receiver, message } = data;
    console.log(data);
    io.to(receiver).emit("private message", { sender, message });
  });
  socket.on("disconnect", () => {
    console.log("user disconnected");
  });
}).on('error', (err) => {
    console.error('Socket.IO error:', err);
    // Handle Socket.IO errors
  });;

// create  link